# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: stablecaps

# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: ice-cat-wrangler5

# "service" is the name of this project. This will also be added to your AWS resource names.
service: ice-cat-wrangler5

plugins:
  - serverless-python-requirements
  - serverless-ssm-fetch
custom:
  defaultStage: dev
  currentStage: ${opt:stage, self:custom.defaultStage}
  awsRegion: ${file(./config/${self:custom.currentStage}.yml):aws_region}
  deploymentBucketFromFile: ${file(./config/${self:custom.currentStage}.yml):deployment_bucket}
  deploymentBucket: ${param:dbuck, self:custom.deploymentBucketFromFile}

  iamRoleArnFromFile: ${file(./config/${self:custom.currentStage}.yml):iam_role_arn}
  iamRoleArn: ${param:rolearn, self:custom.iamRoleArnFromFile}
  # iamRoleArn: ${self:custom.serverlessSsmFetch.lambaRoleArn}
  sourcebucketSsmKey: ${self:custom.serverlessSsmFetch.s3bucketSource}
  serverlessSsmFetch:
    s3bucketSource: '/stablecaps/dev/cat-wrangler/S3BUCKET_SOURCE'
    s3bucketDest: '/stablecaps/dev/cat-wrangler/S3BUCKET_DEST'
    s3bucketFail: '/stablecaps/dev/cat-wrangler/S3BUCKET_FAIL'
    # for some reason we cannot assign this to provider.iam.role
    lambaRoleArn: '/stablecaps/dev/cat-wrangler/lambda_role_cat_arn'
  pythonRequirements:
    dockerizePip: true

provider:
  name: aws
  runtime: python3.12
  stage: ${self:custom.currentStage}
  region: ${self:custom.awsRegion}
  deploymentBucket: ${self:custom.deploymentBucket}

  iam:
    role: ${self:custom.iamRoleArn}

  tags:
    version: ${file(./config/${self:custom.currentStage}.yml):version}

  logs:
    httpApi: true

  httpApi:
    metrics: true
    useProviderTags: true
    # disableDefaultEndpoint: true #<----- enable after custom domain setup

functions:
  results:
    handler: func_results.run
    name: ${self:service}-${self:custom.currentStage}-func_results
    description: "Get results for a given uploaded image id"
    events:
      - httpApi:
          path: /v1/imagecat/results/{resultid}
          method: get
          authorizer:
            type: aws_iam

  image-analyse:
    name: ${self:service}-${self:custom.currentStage}-image_analyse
    handler: func_image_analyse.run
    description: "Submit images for categorisation & identification"
    events:
      - httpApi:
          path: /v1/imagecat/analyse
          method: post
          authorizer:
            type: aws_iam

  s3_bulkimg_analyse:
    name: ${self:service}-${self:custom.currentStage}-s3-bulkimg-analyse
    handler: func_s3_bulkimg_analyse.run
    description: "Bulk submit images from s3 for categorisation & identification"
    ssmToEnvironment:
      - s3bucketSource
      - s3bucketDest
      - s3bucketFail
      # - lambaRoleArn
    package:
      individually: true
      exclude:
        - "*/**"
      # include:
      #   - handler.py
      #   - boto3_helpers.py
      #   - secrets_manager.py
      #   - requirements.txt
      #   - __init__.py
    events:
      - s3:
          bucket: ${ssm:${self:custom.sourcebucketSsmKey}}
          event: s3:ObjectCreated:*
          # rules:
          #   - prefix: incoming/
          existing: true
          forceDeploy: true

resources:
  Resources:
    SSMService:
      Type: AWS::SSM::Parameter
      Properties:
        Name: /stablecaps/${self:custom.currentStage}/cat-wrangler/SERVICE
        Type: String
        Value: "execute-api"
        Tags:
          Environment: ${self:custom.currentStage}

    SSMAWSRegion:
      Type: AWS::SSM::Parameter
      Properties:
        Name: /stablecaps/${self:custom.currentStage}/cat-wrangler/AWS_REGION
        Type: String
        Value: "eu-west-1"
        Tags:
          Environment: ${self:custom.currentStage}

    SSMApiHost:
      Type: AWS::SSM::Parameter
      Properties:
        Name: /stablecaps/${self:custom.currentStage}/cat-wrangler/API_HOST
        Type: String
        Value: ${cf:ice-cat-wrangler5-${self:custom.currentStage}.HttpApiUrl}
        Tags:
          Environment: ${self:custom.currentStage}

    SSMFuncImageAnalyserName:
      Type: AWS::SSM::Parameter
      Properties:
        Name: /stablecaps/${self:custom.currentStage}/cat-wrangler/FUNC_IMAGE_ANALYSER_NAME
        Type: String
        Value: "${self:service}-${self:custom.currentStage}-image_analyse"
        Tags:
          Environment: ${self:custom.currentStage}

    SSMFuncBulkImgAnalyserName:
      Type: AWS::SSM::Parameter
      Properties:
        Name: /stablecaps/${self:custom.currentStage}/cat-wrangler/FUNC_BULKIMG_ANALYSER_NAME
        Type: String
        Value: "${self:service}-${self:custom.currentStage}-s3-bulkimg-analyse"
        Tags:
          Environment: ${self:custom.currentStage}

    SSMFuncImageResultsName:
      Type: AWS::SSM::Parameter
      Properties:
        Name: /stablecaps/${self:custom.currentStage}/cat-wrangler/FUNC_IMAGE_RESULTS_NAME
        Type: String
        Value: "${self:service}-${self:custom.currentStage}-func_results"
        Tags:
          Environment: ${self:custom.currentStage}

    SSMAnalyseEndpoint:
      Type: AWS::SSM::Parameter
      Properties:
        Name: /stablecaps/${self:custom.currentStage}/cat-wrangler/ANALYSE_ENDPOINT
        Type: String
        Value: "/v1/imagecat/analyse"
        Tags:
          Environment: ${self:custom.currentStage}

    SSMResultsEndpoint:
      Type: AWS::SSM::Parameter
      Properties:
        Name: /stablecaps/${self:custom.currentStage}/cat-wrangler/RESULTS_ENDPOINT
        Type: String
        Value: "/v1/imagecat/results"
        Tags:
          Environment: ${self:custom.currentStage}


# https://www.serverless.com/framework/docs/providers/aws/events/http-api
