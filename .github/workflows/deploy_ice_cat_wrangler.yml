name: Deploy ice-cat-wrangler to ECS

on:
  push:
    branches:
      - main
  workflow_dispatch:
    # inputs:
    #   icecat_tag:
    #     type: string
    #     required: true

# permission can be added at job level or workflow level
permissions:
  id-token: write   # This is required for requesting the JWT (oidc)
  contents: write    # This is required for actions/checkout &* coverage
  pull-requests: write
  checks: write # coverage - https://github.com/marketplace/actions/pytest-coverage-comment

jobs:
  build:
    name: Deploy ice-cat-wrangler to ECS
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Setup node
      uses: actions/setup-node@v4
      with:
        node-version: 18.20.8

    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
    #   with:
    #     aws-region: eu-west-1
    #     # role arn is output from 01b_github_actions_oidc/voutputs.tf
    #     role-to-assume: ${{ secrets.AWS_GHA_ASSUME_ROLE_ARN }}
    #     role-session-name: GitHubActions985dtd968


    # - name: Install Terraform
    #   uses: hashicorp/setup-terraform@v3
    #   with:
    #     terraform_version: 1.11.3

    # - name: Install python3.12
    #   uses: actions/setup-python@v5
    #   with:
    #     python-version: '3.12'

    # - name: Decrypt secrets
    #   run: |
    #     #!/bin/bash

    #     ./secrets_decryptor.sh ${{ secrets.iccat_decryptor_key }}

    # - name: Deploy s3 buckets
    #   run: |
    #     #!/bin/bash

    #     cd infra-terra
    #       ./xxx_tfhelperv3.sh terraform 02_cat_wrangler_s3_buckets yes dev full
    #     cd -

    # - name: Deploy dynamodb table
    #   run: |
    #     #!/bin/bash

    #     set -e
    #     cd infra-terra
    #       ./xxx_tfhelperv3.sh terraform 03_cat_wrangler_backend yes dev full
    #     cd -


    # - name: Deploy lambda permissions
    #   run: |
    #     #!/bin/bash

    #     set -e
    #     cd infra-terra
    #       ./xxx_tfhelperv3.sh terraform 04_create_lambda_permissions yes dev full
    #     cd -

    # - name: Deploy lambda permissions
    #   run: |
    #     #!/bin/bash

    #     set -e
    #     cd infra-terra
    #       ./xxx_tfhelperv3.sh terraform 04_create_lambda_permissions yes dev full
    #     cd -

    #####################################################
    - name: Run pytest for api_client serverless and shared_helpers
      run: |
        #!/bin/bash
        set -e

        for mypackage in api_client serverless ; do # shared_helpers
          cd $mypackage
            echo -e "\n\n\n################################################" RUNNING $mypackage ################################################""
            pip install -r requirements-dev.txt

            echo ""
            pytest
          cd -
        done

    - name: Build coverage file for api_client serverless and shared_helpers
      run: |
        #!/bin/bash
        set -e

        for mypackage in api_client serverless shared_helpers; do
          cd $mypackage
            echo -e "\n\n\n################################################" TESTING $mypackage ################################################""
            pytest --cov=${mypackage} tests/ --junitxml=${mypackage}_pytest.xml --cov-report=term-missing:skip-covered --cov-report=xml
          cd -
        done

    - name: Pytest coverage comment
      id: coverageComment
      uses: MishaKav/pytest-coverage-comment@main
      with:
        # multiple-files: |
        pytest-xml-coverage-path: api_client/coverage.xml
        junitxml-path: api_client/api_client_pytest.xml
        junitxml-title: API Client Coverage
        title: API Client Coverage
        badge-title: API Client Coverage
        hide-badge: false
        hide-report: false
        create-new-comment: false
        hide-comment: false
        report-only-changed-files: false
        remove-link-from-badge: false
        unique-id-for-comment: python3.12

    - name: Update Readme with Coverage Html
      run: |
        #!/bin/bash
        set -e

        sed -i '/<!-- Pytest Coverage Comment:Begin -->/,/<!-- Pytest Coverage Comment:End -->/c\<!-- Pytest Coverage Comment:Begin -->\n\${{ steps.coverageComment.outputs.coverageHtml }}\n<!-- Pytest Coverage Comment:End -->' ./README.md

        git status
        git pull

    - name: Commit & Push changes to Readme
      uses: actions-js/push@master
      with:
        message: Update coverage on Readme
        github_token: ${{ secrets.GITHUB_TOKEN }}

    # - name: Deploy serverless
    #   env:
    #     SERVERLESS_ACCESS_KEY: ${{ secrets.serverless_ci_secret }}
    #   run: |
    #     #!/bin/bash

    #     set -e

    #     export ${{ secrets.serverless_ci_secret}}

    #     cd serverless
    #       npm ci
    #       #
    #       npm i serverless -g
    #       serverless update
    #       serverless login
    #       #
    #       make slsplugins
    #       make slsdeployfull
    #     cd -

    - name: Delete unecrypted secrets from build agent
      if: always()
      run: |
        #!/bin/bash

        set -e

        ALL_SECRET_FILES=$(cat secrets.txt)

        for secret_path in $ALL_SECRET_FILES; do
          echo "Deleting secret $secret_path"
          rm -f $secret_path
        done

        echo -e "\nAll secrets deleted from build agent"
