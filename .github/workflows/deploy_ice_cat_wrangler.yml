name: Deploy ice-cat-wrangler to ECS

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      icecat_tag:
        type: string
        required: true

# permission can be added at job level or workflow level
permissions:
  id-token: write   # This is required for requesting the JWT (oidc)
  contents: read    # This is required for actions/checkout
  pull-requests: write

jobs:
  build:
    name: Deploy ice-cat-wrangler to ECS
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Setup node
      uses: actions/setup-node@v4
      with:
        node-version: 18.20.8
        cache: 'npm'
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
      with:
        aws-region: eu-west-1
        # role arn is output from 01b_github_actions_oidc/voutputs.tf
        role-to-assume: ${{ secrets.AWS_GHA_ASSUME_ROLE_ARN }}
        role-session-name: GitHubActions985dtd968


    - name: Install Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.11.3

    - name: Decrypt secrets
      run: |
        #!/bin/bash

        ./secrets_decryptor.sh ${{ secrets.iccat_decryptor_key }}

    - name: Deploy s3 buckets
      run: |
        #!/bin/bash

        cd infra-terra
          ./xxx_tfhelperv3.sh terraform 02_cat_wrangler_s3_buckets yes dev full
        cd -

    - name: Deploy dynamodb table
      run: |
        #!/bin/bash

        set -e
        cd infra-terra
          ./xxx_tfhelperv3.sh terraform 03_cat_wrangler_backend yes dev full
        cd -


    - name: Deploy lambda permissions
      run: |
        #!/bin/bash

        set -e
        cd infra-terra
          ./xxx_tfhelperv3.sh terraform 04_create_lambda_permissions yes dev full
        cd -

    - name: Deploy lambda permissions
      run: |
        #!/bin/bash

        set -e
        cd infra-terra
          ./xxx_tfhelperv3.sh terraform 04_create_lambda_permissions yes dev full
        cd -

    - name: Deploy serverless
      run: |
        #!/bin/bash

        set -e
        cd serverless
          npm ci
          npm test
          #
          npm i serverless -g
          serverless update
          #
          make slsplugins
          make slsdeployfull
        cd -

    - name: Delete unecrypted secrets from build agent
      if: always()
      run: |
        #!/bin/bash

        set -e

        ALL_SECRET_FILES=$(cat secrets.txt)

        for secret_path in $ALL_SECRET_FILES; do
          echo "Deleting secret $secret_path"
          rm -f $secret_path
        done

        echo -e "\nAll secrets deleted from build agent"
